set-environment -g PATH "/usr/local/bin:/bin:/usr/bin"

set-option -g history-limit 100000
set-option -sg escape-time 0
setw -g mode-keys vi

unbind-key j
bind-key j select-pane -D

unbind-key k
bind-key k select-pane -U

unbind-key h
bind-key h select-pane -L

unbind-key l
bind-key l select-pane -R

unbind-key J
bind-key -r J resize-pane -D 3

unbind-key K
bind-key -r K resize-pane -U 3

unbind-key H
bind-key -r H resize-pane -L 3

unbind-key L
bind-key -r L resize-pane -R 3

unbind-key [
bind-key Escape copy-mode

unbind-key -T copy-mode-vi C-v;   bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
unbind-key -T copy-mode-vi [  ;   bind-key -T copy-mode-vi v send-keys -X begin-selection
unbind-key -T copy-mode-vi ]  ;   bind-key -T copy-mode-vi y send-keys -X copy-selection
bind p paste-buffer

unbind-key '"'
bind-key '"' split-window -c "#{pane_current_path}"

unbind-key %
bind-key % split-window -h -c "#{pane_current_path}"

unbind-key c
bind-key c new-window -c "#{pane_current_path}"

bind-key -n C-d detach

unbind C-b
set -g prefix C-f
bind-key f send-prefix

# Let panes remain in place when their command exits.
# set -g remain-on-exit on
# When a pane's command exits, check if it's the final pane in the session.
# If so, respawn; else kill the pane.
#set-hook -g pane-died "if -F '#{&&:#{==:#{session_windows},1},#{==:#{window_panes},1}}' 'respawn-pane' 'kill-pane'"

# Colors
set-option -g pane-active-border-style fg=blue

# Powerline
set -g default-terminal "xterm-256color"
source '/Users/<>/.dotfiles/dotfiles/.site_packages/powerline/bindings/tmux/powerline.conf'
